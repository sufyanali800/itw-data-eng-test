{
	"name": "earthquakes_data_cleanup",
	"properties": {
		"description": "it will do the data cleanup and store data in the silver layer",
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "demo",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "1f81b8f8-0bca-4b6c-ab16-755281c6e709"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e864c2c1-8ece-4d08-9e0e-b918af4697ec/resourceGroups/earthquake-demo/providers/Microsoft.Synapse/workspaces/earthquakes-demo-pipeline/bigDataPools/demo",
				"name": "demo",
				"type": "Spark",
				"endpoint": "https://earthquakes-demo-pipeline.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/demo",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"# load data\r\n",
					"df_source = spark.read.parquet(\"abfss://earthquakes@earthquakeslakehouse.dfs.core.windows.net/bronze/\")\r\n",
					"\r\n",
					"print(\"Total records: \"+ str(df_source.count()))"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# remove duplicates\r\n",
					"\r\n",
					"df_earthquakes = df_source.distinct()\r\n",
					"df_earthquakes = df_earthquakes.filter(\"time is not null\")\r\n",
					"df_earthquakes = df_earthquakes.filter(\"place is not null\")\r\n",
					"\r\n",
					"print(\"Total count after removing duplicate and appying null checks: \" + str(df_earthquakes.count()))\r\n",
					"\r\n",
					""
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df_earthquakes)"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"#save clean data into silver layer as delta table\r\n",
					"\r\n",
					"delta_table_path = \"/silver/earthquakes\"\r\n",
					"df_earthquakes.write.format(\"delta\").save(delta_table_path)\r\n",
					" "
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}